{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "prepare-dev-env",
            "type": "shell",
            "command": "echo Starting development environment...",
            "dependsOrder": "sequence",
            "dependsOn": ["start-backend", "wait-for-backend", "start-frontend"],
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "start-backend",
            "type": "shell",
            "command": "python -m uvicorn src.api.main:app --reload --reload-delay 0 --reload --host 0.0.0.0 --port 8000",
            "isBackground": true,
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "clear": true
            },
            "problemMatcher": {
                "pattern": [
                    {
                        "regexp": "^.*Error.*$",
                        "file": 1,
                        "location": 2,
                        "message": 3
                    },
                    {
                        "regexp": "^.*Exception.*$",
                        "file": 1,
                        "location": 2,
                        "message": 3
                    }
                ],
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^INFO:\\s*Started server process",
                    "endsPattern": "^INFO:\\s*Application startup complete"
                }
            }
        },
        {
            "label": "wait-for-backend",
            "type": "shell",
            "command": "node -e \"const http=require('http'); const checkServer=()=>{http.get('http://localhost:8000/docs',(res)=>{if(res.statusCode===200){process.exit(0)}else{setTimeout(checkServer,1000)}}).on('error',()=>{setTimeout(checkServer,1000)})}; checkServer();\"",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            }
        },
        {
            "label": "start-frontend",
            "type": "npm",
            "script": "start",
            "path": "src/frontend",
            "isBackground": true,
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "clear": true
            },
            "problemMatcher": {
                "owner": "custom",
                "pattern": [
                    {
                        "regexp": "^(?=.*?\\b(error|failed)\\b).*$",
                        "message": 0
                    }
                ],
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^Starting the development server",
                    "endsPattern": "^Compiled successfully|Failed to compile"
                }
            }
        }
    ]
}